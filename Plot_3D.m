close all; clear;
addpath('npy-matlab-master');

% Read 3D npy file, generated by recon3d.py
A = readNPY('grain_ang.npy');

Mean_z = zeros(size(A,3), 1);
for a = 1:size(A,3)
    Mean_z(a) = mean(mean(A(:, :, a, 3)));
end
max_mean = max(Mean_z);

%figure; mesh(A(:, :, 50, 1));

A_final_w = zeros(size(A));
for i = 1:size(A,3)
    fprintf('Analyzing level %03i\n', i);
    [Layer_w] = Blobs_finder(A, max_mean, i, 3);
    A_final_w(:,:,i) = Layer_w(:,:);
end

A_final_t = zeros(size(A));
for i = 1:size(A,3)
    fprintf('Analyzing level %03i\n', i);
    [Layer_t] = Blobs_finder(A, max_mean, i, 1);
    A_final_t(:,:,i) = Layer_t(:,:);
end

A_final_g = zeros(size(A));
for i = 1:size(A,3)
    for j = 1:size(A,1)
        for k = 1:size(A,2)
            if A(j, k, i, 2) < 0.07
                A_final_g(j, k, i) = 1;
            end
        end
    end
end

A_comb = zeros(size(A));
for i = 1:size(A,3)
    A_comb(:,:,i) = A_final_w(:,:,i)*10*(A_final_t(:,:,i) + A_final_g(:,:,i));
end

output_t = sprintf('theta_3D.vtk');
savevtk(A_final_t, output_t);
output_g = sprintf('gamma_3D.vtk');
savevtk(A_final_g, output_g);
output_w = sprintf('weight_3D.vtk');
savevtk(A_final_w, output_w);
output_comb = sprintf('comb_3D.vtk');
savevtk(A_comb, output_comb);
